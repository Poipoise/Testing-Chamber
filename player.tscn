[gd_scene load_steps=4 format=3 uid="uid://d3l3lcd48ic5f"]

[sub_resource type="GDScript" id="GDScript_4vqol"]
resource_name = "player"
script/source = "extends CharacterBody3D



#playernodes
@onready var head = $Head
@onready var standing_collision_shape = $standing_collision_shape
@onready var crouching_collision_shape = $crouching_collision_shape
@onready var ray_cast_3d = $RayCast3D
#Speed vars
@export var walking_speed = 5.0
@export var sprinting_speed = 8.0
@export var crouching_speed = 3.0
var current_speed = 5.0
#movement vars
var jump_velocity = 4.5
var lerp_speed = 10.0
#Input vars
@export var mouse_sensitivity = .003
var direction = Vector3.ZERO
var crouching_depth = -.5

var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _ready():
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED
	
func _input(event):
	if event.is_action_pressed(\"ui_cancel\"):
		Input.mouse_mode = Input.MOUSE_MODE_VISIBLE
	if event is InputEventMouseButton and Input.mouse_mode == Input.MOUSE_MODE_VISIBLE:
		if event.button_index == MOUSE_BUTTON_LEFT and event.pressed:
			Input.mouse_mode = Input.MOUSE_MODE_CAPTURED
func _physics_process(delta):
	if Input.is_action_pressed(\"crouch\"):
		current_speed = crouching_speed
		head.position.y = lerp(head.position.y,1.8 + crouching_depth, delta * lerp_speed)
		standing_collision_shape.disabled = true
		crouching_collision_shape.disabled = false
	elif !ray_cast_3d.is_colliding():
		standing_collision_shape.disabled = false
		crouching_collision_shape.disabled = true
		head.position.y = lerp(head.position.y,1.8, delta * lerp_speed)
		if Input.is_action_pressed(\"sprint\"):
			current_speed = sprinting_speed
		else:
			current_speed = walking_speed
	if not is_on_floor():
		velocity.y -= gravity * delta
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = jump_velocity

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"left\", \"right\", \"forward\", \"backward\")
	direction = lerp(direction,(transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized(), delta*lerp_speed)
	if direction:
		velocity.x = direction.x * current_speed
		velocity.z = direction.z * current_speed
	else:
		velocity.x = move_toward(velocity.x, 0, current_speed)
		velocity.z = move_toward(velocity.z, 0, current_speed)
	move_and_slide()

func _unhandled_input(event):
	if event is InputEventMouseMotion:
		rotation.y -= event.relative.x * mouse_sensitivity
		head.rotation.x -= event.relative.y * mouse_sensitivity
		head.rotation_degrees.x = clamp(head.rotation_degrees.x, -89,89)
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_stmkw"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_m5bfw"]
height = 1.2

[node name="Player" type="CharacterBody3D"]
script = SubResource("GDScript_4vqol")

[node name="standing_collision_shape" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
shape = SubResource("CapsuleShape3D_stmkw")

[node name="crouching_collision_shape" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.725892, 0)
shape = SubResource("CapsuleShape3D_m5bfw")
disabled = true

[node name="Head" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.8, 0)

[node name="Camera3D" type="Camera3D" parent="Head"]

[node name="RayCast3D" type="RayCast3D" parent="."]
target_position = Vector3(0, 2, 0)
